{"version":3,"sources":["App.js","reportWebVitals.js","index.js","../node_modules/peerjs/dist sync"],"names":["peer","Peer","conn","connect","App","useState","myID","setMyID","friendID","setFriendID","mystream","setsMytream","stateConnect","setStateConnect","stateButton","setSateButton","txtMessage","setTxtMessage","messages","setMessages","files","setFiles","fileList","setFileList","stateTooltip","setStateTooltip","stateCopy","setStateCopy","stateDisConnect","setSateDisConnect","stateCollapseChat","setStateCollapseChat","stateCollapseFile","setStateCollapseFile","friendAudio","setFriendAudio","myVideo","useRef","friendVideo","document","title","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","on","id","connection","data","type","onReceivedMessage","onReceivedFile","call","answer","catch","err","console","error","MyVideo","FriendVideo","message","owner","blob","Blob","file","filetype","url","URL","createObjectURL","addFile","name","filename","size","playsInline","muted","ref","autoPlay","style","maxWidth","togleStateDisConnect","sendMessage","send","className","md","marginBottom","theme","display","justifyContent","cursor","onClick","open","map","index","outline","pill","placeholder","value","onKeyDown","e","key","onChange","target","class","href","download","prettyBytes","disabled","alert","onMouseLeave","destroy","window","location","reload","padding","color","onMouseEnter","margin","clipboard","writeText","toggle","length","handleChange","htmlFor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.97ff13b5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Peer from \"peerjs\";\nimport prettyBytes from \"pretty-bytes\";\nimport {\n  Container,\n  Row,\n  Col,\n  Alert,\n  Card,\n  CardBody,\n  Button,\n  Badge,\n  Tooltip,\n  CardHeader,\n  FormInput,\n  Collapse,\n  CardFooter,\n} from \"shards-react\";\n\nvar peer = new Peer();\nvar conn = peer.connect();\n\nconst App = () => {\n  const [myID, setMyID] = useState(\"\");\n  const [friendID, setFriendID] = useState(\"\");\n  const [mystream, setsMytream] = useState();\n\n  const [stateConnect, setStateConnect] = useState(false);\n  const [stateButton, setSateButton] = useState(false);\n\n  const [txtMessage, setTxtMessage] = useState();\n  const [messages, setMessages] = useState([]);\n  const [files, setFiles] = useState();\n  const [fileList, setFileList] = useState([]);\n\n  let [stateTooltip, setStateTooltip] = useState(false);\n  let [stateCopy, setStateCopy] = useState(false);\n  let [stateDisConnect, setSateDisConnect] = useState(false);\n  let [stateCollapseChat, setStateCollapseChat] = useState(false);\n  let [stateCollapseFile, setStateCollapseFile] = useState(false);\n\n  const [friendAudio, setFriendAudio] = useState(false);\n\n  const myVideo = useRef();\n  const friendVideo = useRef();\n\n  // Set Title\n  document.title = myID;\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        setsMytream(stream);\n        if (myVideo.current) {\n          myVideo.current.srcObject = stream;\n        }\n      });\n\n    peer.on(\"open\", (id) => {\n      setMyID(id);\n    });\n\n    peer.on(\"connection\", (connection) => {\n      conn = connection;\n      // Receive Data\n      connection.on(\"data\", (data) => {\n        setStateConnect(true);\n\n        // setFriendID(data)\n        if (data.type === \"id\") setFriendID(data.id);\n        else if (data.type === \"message\") onReceivedMessage(data);\n        else if (data.type === \"file\") onReceivedFile(data);\n      });\n    });\n\n    peer.on(\"disconnect\", () => {\n      setStateConnect(false);\n    });\n\n    // Answer\n    peer.on(\"call\", (call) => {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((stream) => {\n          call.answer(stream);\n          call.on(\"stream\", (stream) => {\n            friendVideo.current.srcObject = stream;\n          });\n        })\n        .catch((err) => {\n          console.error(\"Failed to get local stream\", err);\n        });\n    });\n  }, [setMessages]);\n\n  const startConnection = () => {\n    conn = peer.connect(friendID);\n\n    // Send Friend ID\n    conn.on(\"open\", () => {\n      conn.send({ type: \"id\", id: friendID });\n      setStateConnect(true);\n    });\n\n    conn.on(\"data\", (data) => {\n      if (data.type === \"message\") onReceivedMessage(data);\n      else if (data.type === \"file\") onReceivedFile(data);\n    });\n\n    peer.on(\"error\", (err) => {\n      if (err.type === \"peer-unavailable\")\n        alert(\"The id or peer you're trying to connect to does not exist.\");\n      else if (err.type === \"webrtc\") {\n        alert(\"Native WebRTC errors.\");\n        peer.destroy();\n        window.location.reload(false);\n      }\n    });\n\n    // Call\n    let call = peer.call(friendID, mystream);\n    call.on(\"stream\", (stream) => {\n      friendVideo.current.srcObject = stream;\n    });\n  };\n\n  const onReceivedMessage = (data) => {\n    setMessages((messages) => [\n      ...messages,\n      { message: data.message, owner: false },\n    ]);\n  };\n\n  const onReceivedFile = (data) => {\n    const blob = new Blob([data.file], { type: data.filetype });\n    const url = URL.createObjectURL(blob);\n\n    addFile({ name: data.filename, url: url, size: data.size });\n  };\n\n  const addFile = (file) => {\n    const data = { name: file.name, url: file.url, size: file.size };\n    setFileList((fileList) => [...fileList, data]);\n  };\n\n  // DisConnect Peer and Refresh Page\n  const DisConnect = () => {\n    peer.destroy();\n    window.location.reload(false);\n  };\n\n  // My Video Conponent\n  let MyVideo;\n  if (mystream) {\n    MyVideo = (\n      <video\n        playsInline\n        muted\n        ref={myVideo}\n        autoPlay\n        style={{ maxWidth: \"100%\" }}\n      />\n    );\n  }\n\n  // Friend Video Conponent\n  let FriendVideo;\n  if (friendVideo) {\n    FriendVideo = (\n      <video\n        playsInline\n        muted={friendAudio ? true : false}\n        ref={friendVideo}\n        autoPlay\n        style={{ maxWidth: \"100%\" }}\n      />\n    );\n  }\n\n  const copyMyID = () => {\n    setStateCopy(stateCopy ? false : true);\n    navigator.clipboard.writeText(myID);\n  };\n\n  const togleStateDisConnect = () => {\n    setSateDisConnect(stateDisConnect ? false : true);\n  };\n\n  const toggleCollapseChat = () => {\n    setStateCollapseChat(stateCollapseChat ? false : true);\n  };\n\n  const toggleCollapseFile = () => {\n    setStateCollapseFile(stateCollapseFile ? false : true);\n  };\n\n  const toggleTooltip = () => {\n    setStateTooltip(stateTooltip ? false : true);\n  };\n\n  const handleChange = (e) => {\n    setFriendID(e.target.value);\n    if (e.target.value.length > 10) setSateButton(true);\n    else setSateButton(false);\n  };\n\n  const sendMessage = () => {\n    if (txtMessage) {\n      conn.send({ type: \"message\", message: txtMessage });\n      setMessages((messages) => [\n        ...messages,\n        { message: txtMessage, owner: true },\n      ]);\n      setTxtMessage(\"\");\n    }\n    // console.log(txtMessage);\n  };\n\n  const sendFile = () => {\n    const file = files[0];\n\n    try {\n      if (file.size >= 5242880) {\n        const blob = new Blob(files, { type: file.type });\n\n        conn.send({\n          type: \"file\",\n          file: blob,\n          filename: file.name,\n          filetype: file.type,\n          size: file.size,\n        });\n      } else {\n        alert(\"The file is less than 5 MB.\");\n      }\n      setFiles(\"\");\n    } catch (err) {\n      alert(err);\n      setFiles(\"\");\n    }\n  };\n\n  const toggleFriendVoid = () => {\n    setFriendAudio(friendAudio ? false : true);\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className=\"mt-2\">\n          <Col md=\"6\">\n            <Alert\n              style={{\n                marginBottom: \"0\"\n              }}\n            >\n              My Video | Peer is {myID}\n            </Alert>\n            {MyVideo}\n          </Col>\n\n          <Col>\n            <Alert\n              theme=\"secondary\"\n              style={{\n                marginBottom: \"0\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <div>Friend Video {friendID ? `| Peer is ${friendID}` : \"\"}</div>\n              <div>\n                <i\n                  style={{cursor:\"pointer\"}}\n                  className={\n                    friendAudio ? \"bi bi-volume-mute-fill\" : \"bi bi-volume-up-fill\"\n                  }\n                  onClick={toggleFriendVoid}\n                ></i>\n              </div>\n            </Alert>\n            {FriendVideo}\n          </Col>\n        </Row>\n\n        {stateConnect ? (\n          <>\n            <Card>\n              <CardHeader\n                style={{\n                  cursor: \"pointer\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n                onClick={toggleCollapseChat}\n              >\n                <div>\n                  <b>Chat With Your Friend</b>\n                </div>\n                <div className=\"text-right\">▼</div>\n              </CardHeader>\n\n              <Collapse open={stateCollapseChat}>\n                <CardBody>\n                  <Row>\n                    {messages &&\n                      messages.map((message, index) => (\n                        <Col\n                          md=\"12\"\n                          className={message.owner ? \"text-right\" : \"text-left\"}\n                        >\n                          <Button\n                            outline\n                            pill\n                            theme={message.owner ? \"primary\" : \"secondary\"}\n                            className=\"mb-1\"\n                          >\n                            {\" \"}\n                            {message.message}{\" \"}\n                          </Button>\n                        </Col>\n                      ))}\n                  </Row>\n                </CardBody>\n                <CardFooter>\n                  <Row>\n                    <Col md=\"9\">\n                      <FormInput\n                        size=\"lg\"\n                        placeholder=\"Enter Message\"\n                        value={txtMessage}\n                        onKeyDown={(e) => {\n                          if (e.key === \"Enter\") sendMessage();\n                        }}\n                        onChange={(e) => setTxtMessage(e.target.value)}\n                      />\n                    </Col>\n                    <Col md=\"3\" className=\"text-right\">\n                      <Button size=\"lg\" onClick={sendMessage}>\n                        Send Message\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardFooter>\n              </Collapse>\n            </Card>\n\n            <Card className=\"mt-2\">\n              <CardHeader\n                style={{\n                  cursor: \"pointer\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n                onClick={toggleCollapseFile}\n              >\n                <div>\n                  <b>Sharing Files</b>\n                </div>\n                <div>▼</div>\n              </CardHeader>\n\n              <Collapse open={stateCollapseFile}>\n                <CardBody>\n                  {fileList &&\n                    fileList.map((file, index) => (\n                      <ul className=\"list-group\" key={index}>\n                        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <a href={file.url} download={file.name}>\n                            {file.name}\n                          </a>\n                          <span className=\"badge bg-primary rounded-pill\">\n                            {prettyBytes(file.size)}\n                          </span>\n                        </li>\n                      </ul>\n                    ))}\n                </CardBody>\n                <CardFooter>\n                  <Row>\n                    <Col md=\"9\">\n                      <FormInput\n                        type=\"file\"\n                        size=\"lg\"\n                        onChange={(e) => setFiles(e.target.files)}\n                      />\n                    </Col>\n                    <Col md=\"3\" className=\"text-right\">\n                      <Button\n                        size=\"lg\"\n                        disabled={files ? false : true}\n                        onClick={sendFile}\n                      >\n                        Send File\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardFooter>\n              </Collapse>\n            </Card>\n          </>\n        ) : (\n          \"\"\n        )}\n\n        <Card className=\"mt-2 mb-2\">\n          <CardBody>\n            {stateConnect ? (\n              <>\n                <Row>\n                  <Col md=\"3\">\n                    {stateDisConnect ? (\n                      <Badge\n                        theme=\"danger\"\n                        onMouseLeave={togleStateDisConnect}\n                        onClick={DisConnect}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <h4\n                          style={{\n                            marginBottom: \"0\",\n                            padding: \"10px\",\n                            color: \"#FFF\",\n                          }}\n                        >\n                          DisConnect\n                        </h4>\n                      </Badge>\n                    ) : (\n                      <Badge\n                        theme=\"success\"\n                        onMouseEnter={togleStateDisConnect}\n                      >\n                        <h4\n                          style={{\n                            marginBottom: \"0\",\n                            padding: \"10px\",\n                            color: \"#FFF\",\n                          }}\n                        >\n                          Connected Peer ID\n                        </h4>\n                      </Badge>\n                    )}\n                  </Col>\n\n                  <Col md=\"9\">\n                    <h4 style={{ margin: \"0\", padding: \"10px\" }}>{friendID}</h4>\n                  </Col>\n                </Row>\n              </>\n            ) : (\n              <>\n                <Row>\n                  <Row>\n                    <Col>\n                      <h4>\n                        <Badge className=\"mr-3\" theme=\"info\">\n                          My ID\n                        </Badge>\n                        <label\n                          style={{ cursor: \"pointer\" }}\n                          id=\"myId\"\n                          onClick={copyMyID}\n                        >\n                          {myID}\n                        </label>\n                      </h4>\n                      <Tooltip\n                        open={stateTooltip}\n                        toggle={toggleTooltip}\n                        target=\"#myId\"\n                      >\n                        {stateCopy ? \"Copied\" : \"Clicke to Coppy\"}\n                      </Tooltip>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col md=\"10\">\n                      <div className=\"form-floating mb-3\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"friendID\"\n                          placeholder=\"Enter Friend ID\"\n                          value={friendID}\n                          onChange={(e) => handleChange(e)}\n                        />\n                        <label htmlFor=\"friendID\">Enter Friend ID</label>\n                      </div>\n                    </Col>\n\n                    <Col md=\"2\">\n                      <Button\n                        size=\"lg\"\n                        pill\n                        theme=\"success\"\n                        disabled={stateButton ? false : true}\n                        onClick={startConnection}\n                      >\n                        Connect\n                      </Button>\n                    </Col>\n                  </Row>\n                </Row>\n              </>\n            )}\n          </CardBody>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 85;"],"sourceRoot":""}